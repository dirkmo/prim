:tx $ffff c! ;

:for ( start stop )
>r, >r,        \ range auf rstack legen
'H @           \ next springt hier hin
r>, r>, 2dup, >r, >r,
=,             \ Schleife zuende?
push,
'H @           \ Hier push adresse-hinter-next
$ffff ,        \ Adresse, muss von next überschrieben werden
jz,            \ Sprung
;

:next
r>, 1+, >r,       \ Zähler holen und inkrementieren
push, swap , jp,  \ Sprung zu for
'H @ swap !       \ adresse-hinter-next schreiben
rdrop, rdrop,
;

:i r> dup >r ;

:test 0 3 [ for ] i tx [ next ] ;

\ [ test ]